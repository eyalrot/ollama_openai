# Nginx Reverse Proxy Configuration
# For production deployments with SSL termination

upstream ollama_proxy {
    server localhost:11434;
    keepalive 32;
}

# Rate limiting zone
limit_req_zone $binary_remote_addr zone=ollama_limit:10m rate=10r/s;

server {
    listen 80;
    server_name ollama.example.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name ollama.example.com;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/ollama.crt;
    ssl_certificate_key /etc/ssl/private/ollama.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Request size limits
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # Timeouts for long-running requests
    proxy_connect_timeout 60s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    send_timeout 300s;
    
    # Main location block
    location / {
        # Rate limiting
        limit_req zone=ollama_limit burst=20 nodelay;
        
        # Proxy settings
        proxy_pass http://ollama_proxy;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Keep-alive
        proxy_set_header Connection "";
        
        # Buffering settings for streaming
        proxy_buffering off;
        proxy_cache off;
        
        # CORS headers (if needed)
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        
        # Handle OPTIONS requests
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://ollama_proxy/health;
        access_log off;
    }
    
    # Metrics endpoint (restricted access)
    location /metrics {
        allow 10.0.0.0/8;
        deny all;
        proxy_pass http://ollama_proxy/metrics;
    }
    
    # Custom error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Logging
    access_log /var/log/nginx/ollama_access.log combined;
    error_log /var/log/nginx/ollama_error.log warn;
}